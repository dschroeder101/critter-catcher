{"ast":null,"code":"import _regeneratorRuntime from\"/home/daniel/Projects/critter-catcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/daniel/Projects/critter-catcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/daniel/Projects/critter-catcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/daniel/Projects/critter-catcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/daniel/Projects/critter-catcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/daniel/Projects/critter-catcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Header from\"./components/Header\";import HemisphereSelector from\"./components/HemisphereSelector\";import CritterSelector from\"./components/CritterSelector\";import FishingLocations from\"./components/FishingLocationTable\";import Content from\"./components/Content\";import Footer from\"./components/Footer\";import\"./App.css\";import\"bootstrap/dist/css/bootstrap.min.css\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.getCurrentFish=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var month,hour,response,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:month=_this.state.currentTime.toLocaleString(\"default\",{month:\"long\"});hour=_this.state.currentTime.getHours();_context.next=4;return fetch(\"/critters/fish/\".concat(_this.state.selectedHemisphere,\"/\").concat(month,\"/\").concat(hour));case 4:response=_context.sent;_context.next=7;return response.json();case 7:body=_context.sent;return _context.abrupt(\"return\",body);case 9:case\"end\":return _context.stop();}}},_callee);}));_this.getCurrentBugs=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var month,hour,response,body;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:month=_this.state.currentTime.toLocaleString(\"default\",{month:\"long\"});hour=_this.state.currentTime.getHours();_context2.next=4;return fetch(\"/critters/bugs/\".concat(_this.state.selectedHemisphere,\"/\").concat(month,\"/\").concat(hour));case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:body=_context2.sent;return _context2.abrupt(\"return\",body);case 9:case\"end\":return _context2.stop();}}},_callee2);}));_this.updateCritters=function(){_this.getCurrentFish().then(function(res){return _this.handleFishUpdate(res);}).catch(function(err){return console.log(err);});_this.getCurrentBugs().then(function(res){return _this.handleBugUpdate(res);}).catch(function(err){return console.log(err);});};_this.state={fish:[],bugs:[],selectedHemisphere:\"North\",selectedCritter:\"Fish\",currentTime:new Date(),lastRetrieval:0,fishingLocations:new Map()};_this.changeHemisphere=function(newHemisphere){_this.setState({selectedHemisphere:newHemisphere},function(){_this.updateCritters();});};_this.changeCritter=function(newCritter){{_this.setState({selectedCritter:newCritter});}};return _this;}_createClass(App,[{key:\"handleFishUpdate\",value:function handleFishUpdate(fish){var _this2=this;this.setState({fish:fish},function(){_this2.calculateFishingLocations();});}},{key:\"handleBugUpdate\",value:function handleBugUpdate(bugs){var _this3=this;this.setState({bugs:bugs},function(){console.log(\"Results: \"+_this3.state.bugs.length);});}},{key:\"calculateFishingLocations\",value:function calculateFishingLocations(){var locationMap=new Map();this.state.fish.map(function(fish){fish.locations.map(function(location){if(locationMap.has(location)){locationMap.get(location).totalValue+=fish.price;locationMap.get(location).numberOfFish++;}else{locationMap.set(location,{totalValue:fish.price,numberOfFish:1});}});});this.setState({fishingLocations:locationMap});}},{key:\"componentDidMount\",value:function componentDidMount(){this.updateCritters();}},{key:\"render\",value:function render(){var hemispheres=[\"North\",\"South\"];var critters=[\"Fish\",\"Bugs\"];return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"div\",{className:\"App-content\"},/*#__PURE__*/React.createElement(HemisphereSelector,{changeHemisphere:this.changeHemisphere,selectedHemisphere:this.state.selectedHemisphere,hemispheres:hemispheres}),/*#__PURE__*/React.createElement(CritterSelector,{changeCritter:this.changeCritter,selectedCritter:this.state.selectedCritter,critters:critters}),/*#__PURE__*/React.createElement(FishingLocations,{locations:this.state.fishingLocations}),/*#__PURE__*/React.createElement(Content,{selectedCritter:this.state.selectedCritter,bugs:this.state.bugs,fish:this.state.fish})),/*#__PURE__*/React.createElement(Footer,null));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/daniel/Projects/critter-catcher/src/App.js"],"names":["React","Component","Header","HemisphereSelector","CritterSelector","FishingLocations","Content","Footer","App","props","getCurrentFish","month","state","currentTime","toLocaleString","hour","getHours","fetch","selectedHemisphere","response","json","body","getCurrentBugs","updateCritters","then","res","handleFishUpdate","catch","err","console","log","handleBugUpdate","fish","bugs","selectedCritter","Date","lastRetrieval","fishingLocations","Map","changeHemisphere","newHemisphere","setState","changeCritter","newCritter","calculateFishingLocations","length","locationMap","map","locations","location","has","get","totalValue","price","numberOfFish","set","hemispheres","critters"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport HemisphereSelector from \"./components/HemisphereSelector\";\nimport CritterSelector from \"./components/CritterSelector\";\nimport FishingLocations from \"./components/FishingLocationTable\";\nimport Content from \"./components/Content\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fish: [],\n      bugs: [],\n      selectedHemisphere: \"North\",\n      selectedCritter: \"Fish\",\n      currentTime: new Date(),\n      lastRetrieval: 0,\n      fishingLocations: new Map(),\n    };\n\n    this.changeHemisphere = (newHemisphere) => {\n      this.setState(\n        {\n          selectedHemisphere: newHemisphere,\n        },\n        () => {\n          this.updateCritters();\n        }\n      );\n    };\n\n    this.changeCritter = (newCritter) => {\n      {\n        this.setState({\n          selectedCritter: newCritter,\n        });\n      }\n    };\n  }\n\n  getCurrentFish = async () => {\n    const month = this.state.currentTime.toLocaleString(\"default\", {\n      month: \"long\",\n    });\n    const hour = this.state.currentTime.getHours();\n    const response = await fetch(\n      `/critters/fish/${this.state.selectedHemisphere}/${month}/${hour}`\n    );\n    const body = await response.json();\n    return body;\n  };\n\n  getCurrentBugs = async () => {\n    const month = this.state.currentTime.toLocaleString(\"default\", {\n      month: \"long\",\n    });\n    const hour = this.state.currentTime.getHours();\n    const response = await fetch(\n      `/critters/bugs/${this.state.selectedHemisphere}/${month}/${hour}`\n    );\n    const body = await response.json();\n    return body;\n  };\n\n  updateCritters = () => {\n    this.getCurrentFish()\n      .then((res) => this.handleFishUpdate(res))\n      .catch((err) => console.log(err));\n\n    this.getCurrentBugs()\n      .then((res) => this.handleBugUpdate(res))\n      .catch((err) => console.log(err));\n  };\n\n  handleFishUpdate(fish) {\n    this.setState({ fish: fish }, () => {\n      this.calculateFishingLocations();\n    });\n  }\n\n  handleBugUpdate(bugs) {\n    this.setState({ bugs: bugs }, () => {\n      console.log(\"Results: \" + this.state.bugs.length);\n    });\n  }\n\n  calculateFishingLocations() {\n    let locationMap = new Map();\n\n    this.state.fish.map((fish) => {\n      fish.locations.map((location) => {\n        if (locationMap.has(location)) {\n          locationMap.get(location).totalValue += fish.price;\n          locationMap.get(location).numberOfFish++;\n        } else {\n          locationMap.set(location, {\n            totalValue: fish.price,\n            numberOfFish: 1,\n          });\n        }\n      });\n    });\n\n    this.setState({\n      fishingLocations: locationMap,\n    });\n  }\n\n  componentDidMount() {\n    this.updateCritters();\n  }\n\n  render() {\n    const hemispheres = [\"North\", \"South\"];\n    const critters = [\"Fish\", \"Bugs\"];\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"App-content\">\n          <HemisphereSelector\n            changeHemisphere={this.changeHemisphere}\n            selectedHemisphere={this.state.selectedHemisphere}\n            hemispheres={hemispheres}\n          />\n          <CritterSelector\n            changeCritter={this.changeCritter}\n            selectedCritter={this.state.selectedCritter}\n            critters={critters}\n          />\n          <FishingLocations locations={this.state.fishingLocations} />\n          <Content\n            selectedCritter={this.state.selectedCritter}\n            bugs={this.state.bugs}\n            fish={this.state.fish}\n          />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}